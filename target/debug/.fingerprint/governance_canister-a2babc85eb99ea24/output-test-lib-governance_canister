{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2410,"byte_end":2423,"line_start":78,"line_end":78,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":38,"highlight_end":51}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:78:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2402,"byte_end":2424,"line_start":78,"line_end":78,"column_start":30,"column_end":52,"is_primary":true,"text":[{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":30,"highlight_end":52}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:78:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3465,"byte_end":3469,"line_start":90,"line_end":90,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"                    |init| {","highlight_start":22,"highlight_end":26}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3699,"byte_end":3728,"line_start":94,"line_end":94,"column_start":25,"column_end":54,"is_primary":true,"text":[{"text":"                        VAL.get_or_init(init, __init)","highlight_start":25,"highlight_end":54}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3797,"byte_end":3801,"line_start":97,"line_end":97,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"                    |init| {","highlight_start":22,"highlight_end":26}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4030,"byte_end":4059,"line_start":101,"line_end":101,"column_start":25,"column_end":54,"is_primary":true,"text":[{"text":"                        VAL.get_or_init(init, __init)","highlight_start":25,"highlight_end":54}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3353,"byte_end":3382,"line_start":88,"line_end":88,"column_start":13,"column_end":42,"is_primary":true,"text":[{"text":"            $crate::thread::LocalKey::new(const {","highlight_start":13,"highlight_end":42}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3353,"byte_end":4114,"line_start":88,"line_end":104,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            $crate::thread::LocalKey::new(const {","highlight_start":13,"highlight_end":50},{"text":"                if $crate::mem::needs_drop::<$t>() {","highlight_start":1,"highlight_end":53},{"text":"                    |init| {","highlight_start":1,"highlight_end":29},{"text":"                        #[thread_local]","highlight_start":1,"highlight_end":40},{"text":"                        static VAL: $crate::thread::local_impl::LazyStorage<$t, ()>","highlight_start":1,"highlight_end":84},{"text":"                            = $crate::thread::local_impl::LazyStorage::new();","highlight_start":1,"highlight_end":78},{"text":"                        VAL.get_or_init(init, __init)","highlight_start":1,"highlight_end":54},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    |init| {","highlight_start":1,"highlight_end":29},{"text":"                        #[thread_local]","highlight_start":1,"highlight_end":40},{"text":"                        static VAL: $crate::thread::local_impl::LazyStorage<$t, !>","highlight_start":1,"highlight_end":83},{"text":"                            = $crate::thread::local_impl::LazyStorage::new();","highlight_start":1,"highlight_end":78},{"text":"                        VAL.get_or_init(init, __init)","highlight_start":1,"highlight_end":54},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            })","highlight_start":1,"highlight_end":15}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2410,"byte_end":2423,"line_start":78,"line_end":78,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":38,"highlight_end":51}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:78:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2410,"byte_end":2423,"line_start":78,"line_end":78,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":38,"highlight_end":51}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:78:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3627,"byte_end":3671,"line_start":93,"line_end":93,"column_start":31,"column_end":75,"is_primary":true,"text":[{"text":"                            = $crate::thread::local_impl::LazyStorage::new();","highlight_start":31,"highlight_end":75}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2410,"byte_end":2423,"line_start":78,"line_end":78,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":38,"highlight_end":51}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:78:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3958,"byte_end":4002,"line_start":100,"line_end":100,"column_start":31,"column_end":75,"is_primary":true,"text":[{"text":"                            = $crate::thread::local_impl::LazyStorage::new();","highlight_start":31,"highlight_end":75}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2591,"byte_end":2600,"line_start":84,"line_end":84,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":34,"highlight_end":43}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:84:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2583,"byte_end":2601,"line_start":84,"line_end":84,"column_start":26,"column_end":44,"is_primary":true,"text":[{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":26,"highlight_end":44}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:84:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3465,"byte_end":3469,"line_start":90,"line_end":90,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"                    |init| {","highlight_start":22,"highlight_end":26}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3699,"byte_end":3728,"line_start":94,"line_end":94,"column_start":25,"column_end":54,"is_primary":true,"text":[{"text":"                        VAL.get_or_init(init, __init)","highlight_start":25,"highlight_end":54}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3797,"byte_end":3801,"line_start":97,"line_end":97,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"                    |init| {","highlight_start":22,"highlight_end":26}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4030,"byte_end":4059,"line_start":101,"line_end":101,"column_start":25,"column_end":54,"is_primary":true,"text":[{"text":"                        VAL.get_or_init(init, __init)","highlight_start":25,"highlight_end":54}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3353,"byte_end":3382,"line_start":88,"line_end":88,"column_start":13,"column_end":42,"is_primary":true,"text":[{"text":"            $crate::thread::LocalKey::new(const {","highlight_start":13,"highlight_end":42}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3353,"byte_end":4114,"line_start":88,"line_end":104,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            $crate::thread::LocalKey::new(const {","highlight_start":13,"highlight_end":50},{"text":"                if $crate::mem::needs_drop::<$t>() {","highlight_start":1,"highlight_end":53},{"text":"                    |init| {","highlight_start":1,"highlight_end":29},{"text":"                        #[thread_local]","highlight_start":1,"highlight_end":40},{"text":"                        static VAL: $crate::thread::local_impl::LazyStorage<$t, ()>","highlight_start":1,"highlight_end":84},{"text":"                            = $crate::thread::local_impl::LazyStorage::new();","highlight_start":1,"highlight_end":78},{"text":"                        VAL.get_or_init(init, __init)","highlight_start":1,"highlight_end":54},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    |init| {","highlight_start":1,"highlight_end":29},{"text":"                        #[thread_local]","highlight_start":1,"highlight_end":40},{"text":"                        static VAL: $crate::thread::local_impl::LazyStorage<$t, !>","highlight_start":1,"highlight_end":83},{"text":"                            = $crate::thread::local_impl::LazyStorage::new();","highlight_start":1,"highlight_end":78},{"text":"                        VAL.get_or_init(init, __init)","highlight_start":1,"highlight_end":54},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            })","highlight_start":1,"highlight_end":15}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2591,"byte_end":2600,"line_start":84,"line_end":84,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":34,"highlight_end":43}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:84:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2591,"byte_end":2600,"line_start":84,"line_end":84,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":34,"highlight_end":43}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:84:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3627,"byte_end":3671,"line_start":93,"line_end":93,"column_start":31,"column_end":75,"is_primary":true,"text":[{"text":"                            = $crate::thread::local_impl::LazyStorage::new();","highlight_start":31,"highlight_end":75}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2591,"byte_end":2600,"line_start":84,"line_end":84,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":34,"highlight_end":43}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:84:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":3958,"byte_end":4002,"line_start":100,"line_end":100,"column_start":31,"column_end":75,"is_primary":true,"text":[{"text":"                            = $crate::thread::local_impl::LazyStorage::new();","highlight_start":31,"highlight_end":75}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":4286,"byte_end":4353,"line_start":109,"line_end":109,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            $crate::thread::local_impl::thread_local_inner!(@key $t, $($init)*);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8180,"byte_end":8263,"line_start":200,"line_end":200,"column_start":9,"column_end":92,"is_primary":false,"text":[{"text":"        $crate::thread::local_impl::thread_local_inner!($(#[$attr])* $vis $name, $t, $init);","highlight_start":9,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":8273,"byte_end":8305,"line_start":201,"line_end":201,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::thread_local!($($rest)*);","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/governance_canister/src/lib.rs","byte_start":2039,"byte_end":2731,"line_start":67,"line_end":89,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"thread_local! {","highlight_start":1,"highlight_end":16},{"text":"    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(","highlight_start":1,"highlight_end":85},{"text":"        MemoryManager::init(DefaultMemoryImpl::default())","highlight_start":1,"highlight_end":58},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static ID_COUNTER: RefCell<IdStore> = RefCell::new(","highlight_start":1,"highlight_end":56},{"text":"        IdStore::init(","highlight_start":1,"highlight_end":23},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(0)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":1,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":1,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread_local!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/thread/local.rs","byte_start":7520,"byte_end":7545,"line_start":185,"line_end":185,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! thread_local {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::thread::local_impl::thread_local_inner!","def_site_span":{"file_name":"/nix/store/y5k023q95ndaiiw8f5x0krkgdvq54h6c-rust-mixed/lib/rustlib/src/rust/library/std/src/sys/thread_local/native/mod.rs","byte_start":2046,"byte_end":2074,"line_start":51,"line_end":51,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub macro thread_local_inner {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:67:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mthread_local! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static MEMORY_MANAGER: RefCell<MemoryManager<DefaultMemoryImpl>> = RefCell::new(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MemoryManager::init(DefaultMemoryImpl::default())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::thread::local_impl::thread_local_inner` which comes from the expansion of the macro `thread_local` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `init` exists for struct `BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2464,"byte_end":2468,"line_start":79,"line_end":79,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"        ProposalStore::init(","highlight_start":24,"highlight_end":28}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `init` exists for struct `BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:79:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ProposalStore::init(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2449,"byte_end":2462,"line_start":79,"line_end":79,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        ProposalStore::init(","highlight_start":9,"highlight_end":22}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:79:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ProposalStore::init(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2427,"byte_end":2439,"line_start":78,"line_end":78,"column_start":55,"column_end":67,"is_primary":true,"text":[{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":55,"highlight_end":67}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:78:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2427,"byte_end":2555,"line_start":78,"line_end":82,"column_start":55,"column_end":6,"is_primary":true,"text":[{"text":"    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(","highlight_start":55,"highlight_end":68},{"text":"        ProposalStore::init(","highlight_start":1,"highlight_end":29},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":6}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:78:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    static PROPOSAL_STORAGE: RefCell<ProposalStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ProposalStore::init(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(1)))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `init` exists for struct `BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2637,"byte_end":2641,"line_start":85,"line_end":85,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"        VoteStore::init(","highlight_start":20,"highlight_end":24}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":1180,"byte_end":1195,"line_start":33,"line_end":33,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"pub struct Vote {","highlight_start":1,"highlight_end":16}],"label":"doesn't satisfy `Vote: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vote: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `init` exists for struct `BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:85:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Vote {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        VoteStore::init(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2626,"byte_end":2635,"line_start":85,"line_end":85,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        VoteStore::init(","highlight_start":9,"highlight_end":18}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:85:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        VoteStore::init(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2604,"byte_end":2616,"line_start":84,"line_end":84,"column_start":47,"column_end":59,"is_primary":true,"text":[{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":47,"highlight_end":59}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:84:47\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":2604,"byte_end":2728,"line_start":84,"line_end":88,"column_start":47,"column_end":6,"is_primary":true,"text":[{"text":"    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(","highlight_start":47,"highlight_end":60},{"text":"        VoteStore::init(","highlight_start":1,"highlight_end":25},{"text":"            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))","highlight_start":1,"highlight_end":70},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":6}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:84:47\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    static VOTE_STORAGE: RefCell<VoteStore> = RefCell::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        VoteStore::init(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            MEMORY_MANAGER.with(|m| m.borrow().get(MemoryId::new(2)))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":3976,"byte_end":4084,"line_start":133,"line_end":135,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":38},{"text":"        storage.borrow_mut().insert(proposal_id, proposal.clone());","highlight_start":1,"highlight_end":68},{"text":"    });","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:133:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage.borrow_mut().insert(proposal_id, proposal.clone());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":3999,"byte_end":4006,"line_start":133,"line_end":133,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":28,"highlight_end":35}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:133:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `insert` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":4039,"byte_end":4045,"line_start":134,"line_end":134,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"        storage.borrow_mut().insert(proposal_id, proposal.clone());","highlight_start":30,"highlight_end":36}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `insert` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:134:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage.borrow_mut().insert(proposal_id, proposal.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":4283,"byte_end":4370,"line_start":145,"line_end":147,"column_start":20,"column_end":7,"is_primary":true,"text":[{"text":"    let proposal = PROPOSAL_STORAGE.with(|storage| {","highlight_start":20,"highlight_end":53},{"text":"        storage.borrow().get(&req.proposal_id)","highlight_start":1,"highlight_end":47},{"text":"    });","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:145:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let proposal = PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m ____________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage.borrow().get(&req.proposal_id)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":4306,"byte_end":4313,"line_start":145,"line_end":145,"column_start":43,"column_end":50,"is_primary":true,"text":[{"text":"    let proposal = PROPOSAL_STORAGE.with(|storage| {","highlight_start":43,"highlight_end":50}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:145:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let proposal = PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":4342,"byte_end":4345,"line_start":146,"line_end":146,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"        storage.borrow().get(&req.proposal_id)","highlight_start":26,"highlight_end":29}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `get` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:146:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage.borrow().get(&req.proposal_id)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":4774,"byte_end":5026,"line_start":163,"line_end":171,"column_start":25,"column_end":7,"is_primary":true,"text":[{"text":"    let existing_vote = VOTE_STORAGE.with(|storage| {","highlight_start":25,"highlight_end":54},{"text":"        storage","highlight_start":1,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":20},{"text":"            .find(|(_, vote)| {","highlight_start":1,"highlight_end":32},{"text":"                vote.proposal_id == req.proposal_id && vote.voter == caller","highlight_start":1,"highlight_end":76},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            .map(|(_, vote)| vote)","highlight_start":1,"highlight_end":35},{"text":"    });","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:163:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let existing_vote = VOTE_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .map(|(_, vote)| vote)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":4793,"byte_end":4800,"line_start":163,"line_end":163,"column_start":44,"column_end":51,"is_primary":true,"text":[{"text":"    let existing_vote = VOTE_STORAGE.with(|storage| {","highlight_start":44,"highlight_end":51}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:163:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let existing_vote = VOTE_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":4812,"byte_end":4855,"line_start":164,"line_end":166,"column_start":9,"column_end":14,"is_primary":false,"text":[{"text":"        storage","highlight_start":9,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":14}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":4855,"byte_end":4859,"line_start":166,"line_end":166,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"            .iter()","highlight_start":14,"highlight_end":18}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":1180,"byte_end":1195,"line_start":33,"line_end":33,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"pub struct Vote {","highlight_start":1,"highlight_end":16}],"label":"doesn't satisfy `Vote: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vote: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:166:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Vote {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":5680,"byte_end":5776,"line_start":197,"line_end":199,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    VOTE_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":34},{"text":"        storage.borrow_mut().insert(vote_id, vote.clone());","highlight_start":1,"highlight_end":60},{"text":"    });","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:197:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VOTE_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage.borrow_mut().insert(vote_id, vote.clone());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":5699,"byte_end":5706,"line_start":197,"line_end":197,"column_start":24,"column_end":31,"is_primary":true,"text":[{"text":"    VOTE_STORAGE.with(|storage| {","highlight_start":24,"highlight_end":31}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:197:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VOTE_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `insert` exists for struct `RefMut<'_, BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":5739,"byte_end":5745,"line_start":198,"line_end":198,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"        storage.borrow_mut().insert(vote_id, vote.clone());","highlight_start":30,"highlight_end":36}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":1180,"byte_end":1195,"line_start":33,"line_end":33,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"pub struct Vote {","highlight_start":1,"highlight_end":16}],"label":"doesn't satisfy `Vote: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vote: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `insert` exists for struct `RefMut<'_, BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:198:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Vote {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage.borrow_mut().insert(vote_id, vote.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":5818,"byte_end":6323,"line_start":202,"line_end":214,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":38},{"text":"        let mut storage = storage.borrow_mut();","highlight_start":1,"highlight_end":48},{"text":"        if let Some(mut proposal) = storage.get(&req.proposal_id) {","highlight_start":1,"highlight_end":68},{"text":"            if req.vote_choice {","highlight_start":1,"highlight_end":33},{"text":"                proposal.votes_for += 1;","highlight_start":1,"highlight_end":41},{"text":"                proposal.voting_power_for += req.voting_power;","highlight_start":1,"highlight_end":63},{"text":"            } else {","highlight_start":1,"highlight_end":21},{"text":"                proposal.votes_against += 1;","highlight_start":1,"highlight_end":45},{"text":"                proposal.voting_power_against += req.voting_power;","highlight_start":1,"highlight_end":67},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            storage.insert(req.proposal_id, proposal);","highlight_start":1,"highlight_end":55},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    });","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:202:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut storage = storage.borrow_mut();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(mut proposal) = storage.get(&req.proposal_id) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if req.vote_choice {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":5841,"byte_end":5848,"line_start":202,"line_end":202,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":28,"highlight_end":35}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:202:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":5944,"byte_end":5947,"line_start":204,"line_end":204,"column_start":45,"column_end":48,"is_primary":true,"text":[{"text":"        if let Some(mut proposal) = storage.get(&req.proposal_id) {","highlight_start":45,"highlight_end":48}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `get` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:204:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(mut proposal) = storage.get(&req.proposal_id) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `insert` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":6272,"byte_end":6278,"line_start":212,"line_end":212,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"            storage.insert(req.proposal_id, proposal);","highlight_start":21,"highlight_end":27}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `insert` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:212:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            storage.insert(req.proposal_id, proposal);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":6393,"byte_end":6557,"line_start":221,"line_end":227,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":38},{"text":"        storage","highlight_start":1,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":20},{"text":"            .map(|(_, proposal)| proposal)","highlight_start":1,"highlight_end":43},{"text":"            .collect()","highlight_start":1,"highlight_end":23},{"text":"    })","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:221:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .map(|(_, proposal)| proposal)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .collect()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":6416,"byte_end":6423,"line_start":221,"line_end":221,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":28,"highlight_end":35}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:221:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":6435,"byte_end":6478,"line_start":222,"line_end":224,"column_start":9,"column_end":14,"is_primary":false,"text":[{"text":"        storage","highlight_start":9,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":14}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":6478,"byte_end":6482,"line_start":224,"line_end":224,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"            .iter()","highlight_start":14,"highlight_end":18}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:224:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":6650,"byte_end":6954,"line_start":233,"line_end":242,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":38},{"text":"        storage","highlight_start":1,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":20},{"text":"            .filter(|(_, proposal)| {","highlight_start":1,"highlight_end":38},{"text":"                proposal.status == \"active\" && proposal.voting_deadline > current_time","highlight_start":1,"highlight_end":87},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            .map(|(_, proposal)| proposal)","highlight_start":1,"highlight_end":43},{"text":"            .collect()","highlight_start":1,"highlight_end":23},{"text":"    })","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:233:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .collect()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":6673,"byte_end":6680,"line_start":233,"line_end":233,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":28,"highlight_end":35}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:233:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":6692,"byte_end":6735,"line_start":234,"line_end":236,"column_start":9,"column_end":14,"is_primary":false,"text":[{"text":"        storage","highlight_start":9,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":14}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":6735,"byte_end":6739,"line_start":236,"line_end":236,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"            .iter()","highlight_start":14,"highlight_end":18}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:236:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7027,"byte_end":7110,"line_start":247,"line_end":249,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":38},{"text":"        storage.borrow().get(&proposal_id)","highlight_start":1,"highlight_end":43},{"text":"    })","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:247:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage.borrow().get(&proposal_id)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7050,"byte_end":7057,"line_start":247,"line_end":247,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":28,"highlight_end":35}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:247:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7086,"byte_end":7089,"line_start":248,"line_end":248,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"        storage.borrow().get(&proposal_id)","highlight_start":26,"highlight_end":29}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `get` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:248:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage.borrow().get(&proposal_id)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7190,"byte_end":7427,"line_start":254,"line_end":261,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":38},{"text":"        storage","highlight_start":1,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":20},{"text":"            .filter(|(_, proposal)| proposal.property_id == property_id)","highlight_start":1,"highlight_end":73},{"text":"            .map(|(_, proposal)| proposal)","highlight_start":1,"highlight_end":43},{"text":"            .collect()","highlight_start":1,"highlight_end":23},{"text":"    })","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:254:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .collect()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7213,"byte_end":7220,"line_start":254,"line_end":254,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":28,"highlight_end":35}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:254:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7232,"byte_end":7275,"line_start":255,"line_end":257,"column_start":9,"column_end":14,"is_primary":false,"text":[{"text":"        storage","highlight_start":9,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":14}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":7275,"byte_end":7279,"line_start":257,"line_end":257,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"            .iter()","highlight_start":14,"highlight_end":18}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:257:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7499,"byte_end":7716,"line_start":266,"line_end":273,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    VOTE_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":34},{"text":"        storage","highlight_start":1,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":20},{"text":"            .filter(|(_, vote)| vote.proposal_id == proposal_id)","highlight_start":1,"highlight_end":65},{"text":"            .map(|(_, vote)| vote)","highlight_start":1,"highlight_end":35},{"text":"            .collect()","highlight_start":1,"highlight_end":23},{"text":"    })","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:266:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VOTE_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .collect()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7518,"byte_end":7525,"line_start":266,"line_end":266,"column_start":24,"column_end":31,"is_primary":true,"text":[{"text":"    VOTE_STORAGE.with(|storage| {","highlight_start":24,"highlight_end":31}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:266:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VOTE_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7537,"byte_end":7580,"line_start":267,"line_end":269,"column_start":9,"column_end":14,"is_primary":false,"text":[{"text":"        storage","highlight_start":9,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":14}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":7580,"byte_end":7584,"line_start":269,"line_end":269,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"            .iter()","highlight_start":14,"highlight_end":18}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":1180,"byte_end":1195,"line_start":33,"line_end":33,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"pub struct Vote {","highlight_start":1,"highlight_end":16}],"label":"doesn't satisfy `Vote: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vote: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:269:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Vote {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7786,"byte_end":7993,"line_start":278,"line_end":285,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    VOTE_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":34},{"text":"        storage","highlight_start":1,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":20},{"text":"            .filter(|(_, vote)| vote.voter == user_id)","highlight_start":1,"highlight_end":55},{"text":"            .map(|(_, vote)| vote)","highlight_start":1,"highlight_end":35},{"text":"            .collect()","highlight_start":1,"highlight_end":23},{"text":"    })","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:278:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m278\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VOTE_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m280\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m281\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .collect()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Vote: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7805,"byte_end":7812,"line_start":278,"line_end":278,"column_start":24,"column_end":31,"is_primary":true,"text":[{"text":"    VOTE_STORAGE.with(|storage| {","highlight_start":24,"highlight_end":31}],"label":"the trait `Storable` is not implemented for `Vote`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Vote: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:278:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m278\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VOTE_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Vote`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":7824,"byte_end":7867,"line_start":279,"line_end":281,"column_start":9,"column_end":14,"is_primary":false,"text":[{"text":"        storage","highlight_start":9,"highlight_end":16},{"text":"            .borrow()","highlight_start":1,"highlight_end":22},{"text":"            .iter()","highlight_start":1,"highlight_end":14}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":7867,"byte_end":7871,"line_start":281,"line_end":281,"column_start":14,"column_end":18,"is_primary":true,"text":[{"text":"            .iter()","highlight_start":14,"highlight_end":18}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":1180,"byte_end":1195,"line_start":33,"line_end":33,"column_start":1,"column_end":16,"is_primary":false,"text":[{"text":"pub struct Vote {","highlight_start":1,"highlight_end":16}],"label":"doesn't satisfy `Vote: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Vote: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `iter` exists for struct `Ref<'_, BTreeMap<u64, Vote, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:281:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub struct Vote {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        storage\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m280\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .borrow()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m281\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .iter()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Vote: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":8105,"byte_end":8460,"line_start":290,"line_end":299,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":5,"highlight_end":38},{"text":"        let mut storage = storage.borrow_mut();","highlight_start":1,"highlight_end":48},{"text":"        if let Some(mut proposal) = storage.get(&proposal_id) {","highlight_start":1,"highlight_end":64},{"text":"            proposal.status = new_status;","highlight_start":1,"highlight_end":42},{"text":"            storage.insert(proposal_id, proposal.clone());","highlight_start":1,"highlight_end":59},{"text":"            Ok(proposal)","highlight_start":1,"highlight_end":25},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            Err(\"Proposal not found\".to_string())","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    })","highlight_start":1,"highlight_end":7}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:290:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut storage = storage.borrow_mut();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(mut proposal) = storage.get(&proposal_id) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            proposal.status = new_status;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `Proposal: Storable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":8128,"byte_end":8135,"line_start":290,"line_end":290,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    PROPOSAL_STORAGE.with(|storage| {","highlight_start":28,"highlight_end":35}],"label":"the trait `Storable` is not implemented for `Proposal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Storable`:\n  ()\n  (A, B)\n  (A, B, C)\n  Blob<N>\n  BoundedVecN<N>\n  Reverse<T>\n  UnboundedVecN<N>\n  [u8; N]\nand 12 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `StableBTreeMap`","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":8989,"byte_end":8997,"line_start":227,"line_end":227,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"pub struct BTreeMap<K, V, M>","highlight_start":12,"highlight_end":20}],"label":"required by a bound in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs","byte_start":9051,"byte_end":9059,"line_start":230,"line_end":230,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    V: Storable,","highlight_start":8,"highlight_end":16}],"label":"required by this bound in `BTreeMap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Proposal: Storable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:290:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROPOSAL_STORAGE.with(|storage| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Storable` is not implemented for `Proposal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Storable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (A, B)\u001b[0m\n\u001b[0m              (A, B, C)\u001b[0m\n\u001b[0m              Blob<N>\u001b[0m\n\u001b[0m              BoundedVecN<N>\u001b[0m\n\u001b[0m              Reverse<T>\u001b[0m\n\u001b[0m              UnboundedVecN<N>\u001b[0m\n\u001b[0m              [u8; N]\u001b[0m\n\u001b[0m            and 12 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `StableBTreeMap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/btreemap.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct BTreeMap<K, V, M>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    V: Storable,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `BTreeMap`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `get` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":8231,"byte_end":8234,"line_start":292,"line_end":292,"column_start":45,"column_end":48,"is_primary":true,"text":[{"text":"        if let Some(mut proposal) = storage.get(&proposal_id) {","highlight_start":45,"highlight_end":48}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `get` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:292:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(mut proposal) = storage.get(&proposal_id) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `insert` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/governance_canister/src/lib.rs","byte_start":8313,"byte_end":8319,"line_start":294,"line_end":294,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"            storage.insert(proposal_id, proposal.clone());","highlight_start":21,"highlight_end":27}],"label":"method cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/governance_canister/src/lib.rs","byte_start":578,"byte_end":597,"line_start":15,"line_end":15,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Proposal {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Proposal: Storable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Proposal: Storable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `Storable` must be implemented","code":null,"level":"note","spans":[{"file_name":"/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs","byte_start":272,"byte_end":290,"line_start":13,"line_end":13,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"pub trait Storable {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `insert` exists for struct `RefMut<'_, BTreeMap<u64, Proposal, VirtualMemory<Rc<RefCell<Vec<u8>>>>>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/governance_canister/src/lib.rs:294:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Proposal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            storage.insert(proposal_id, proposal.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Proposal: Storable`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `Storable` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/workspace/.local/share/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ic-stable-structures-0.6.9/src/storable.rs:13:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Storable {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 72 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 72 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
